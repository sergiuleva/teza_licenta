/* DO NOT EDIT THIS FILE */
/* This file is autogenerated by the text-database code generator */

#ifndef TOUCHGFX_APPLICATIONFONTPROVIDER_HPP
#define TOUCHGFX_APPLICATIONFONTPROVIDER_HPP

#include <touchgfx/FontManager.hpp>

namespace touchgfx
{
class FlashDataReader;
}

struct Typography
{
    static const touchgfx::FontId SMALL_C = 0;
    static const touchgfx::FontId SMALL_C_AUTO_GENERATED_FOR_KR = 1;
    static const touchgfx::FontId SMALL_C_AUTO_GENERATED_FOR_CN = 2;
    static const touchgfx::FontId SMALL_C_AUTO_GENERATED_FOR_JP = 3;
    static const touchgfx::FontId SMALL_C_AUTO_GENERATED_FOR_TN = 4;
    static const touchgfx::FontId TINY = 5;
    static const touchgfx::FontId SMALL_B = 6;
    static const touchgfx::FontId SMALL_B_AUTO_GENERATED_FOR_KR = 7;
    static const touchgfx::FontId SMALL_B_AUTO_GENERATED_FOR_CN = 8;
    static const touchgfx::FontId SMALL_B_AUTO_GENERATED_FOR_JP = 9;
    static const touchgfx::FontId SMALL_B_AUTO_GENERATED_FOR_TN = 10;
    static const touchgfx::FontId KOREANTINY = 11;
    static const touchgfx::FontId JP_CN_TINY = 12;
    static const touchgfx::FontId ARABICTINY = 13;
};

struct TypographyFontIndex
{
    static const touchgfx::FontId SMALL_C = 0;                       // timesbi_13_4bpp
    static const touchgfx::FontId SMALL_C_AUTO_GENERATED_FOR_KR = 1; // NanumGothic_13_4bpp
    static const touchgfx::FontId SMALL_C_AUTO_GENERATED_FOR_CN = 2; // chinese_msyh_13_4bpp
    static const touchgfx::FontId SMALL_C_AUTO_GENERATED_FOR_JP = 2; // chinese_msyh_13_4bpp
    static const touchgfx::FontId SMALL_C_AUTO_GENERATED_FOR_TN = 3; // Amiri_Regular_13_4bpp
    static const touchgfx::FontId TINY = 0;                          // timesbi_13_4bpp
    static const touchgfx::FontId SMALL_B = 4;                       // timesbi_20_4bpp
    static const touchgfx::FontId SMALL_B_AUTO_GENERATED_FOR_KR = 5; // NanumGothic_20_4bpp
    static const touchgfx::FontId SMALL_B_AUTO_GENERATED_FOR_CN = 6; // chinese_msyh_20_4bpp
    static const touchgfx::FontId SMALL_B_AUTO_GENERATED_FOR_JP = 6; // chinese_msyh_20_4bpp
    static const touchgfx::FontId SMALL_B_AUTO_GENERATED_FOR_TN = 7; // Amiri_Regular_18_2bpp
    static const touchgfx::FontId KOREANTINY = 1;                    // NanumGothic_13_4bpp
    static const touchgfx::FontId JP_CN_TINY = 2;                    // chinese_msyh_13_4bpp
    static const touchgfx::FontId ARABICTINY = 8;                    // Amiri_Regular_16_4bpp
    static const uint16_t NUMBER_OF_FONTS = 9;
};

class ApplicationFontProvider : public touchgfx::FontProvider
{
public:
    virtual touchgfx::Font* getFont(touchgfx::FontId typography);

    static void setFlashReader(touchgfx::FlashDataReader* /*flashReader*/)
    {
    }

    static touchgfx::FlashDataReader* getFlashReader()
    {
        return 0;
    }
};

#endif // TOUCHGFX_APPLICATIONFONTPROVIDER_HPP
