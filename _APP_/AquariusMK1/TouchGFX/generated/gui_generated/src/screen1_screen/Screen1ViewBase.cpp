/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/screen1_screen/Screen1ViewBase.hpp>
#include <touchgfx/Color.hpp>
#include <images/BitmapDatabase.hpp>
#include <texts/TextKeysAndLanguages.hpp>

Screen1ViewBase::Screen1ViewBase() :
    buttonCallback(this, &Screen1ViewBase::buttonCallbackHandler)
{
    __background.setPosition(0, 0, 320, 240);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));
    add(__background);

    background.setPosition(0, 0, 320, 240);
    background.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    add(background);

    logoTextContainer.setPosition(140, 68, 40, 119);
    logoText.setXY(0, 0);
    logoText.setBitmap(touchgfx::Bitmap(BITMAP_LOGO_00_ID));
    logoTextContainer.add(logoText);

    add(logoTextContainer);

    logoX.setXY(140, 68);
    logoX.setBitmap(touchgfx::Bitmap(BITMAP_LOGO_01_ID));
    add(logoX);

    seperatorLine.setPosition(-258, 185, 258, 2);
    seperatorLine.setColor(touchgfx::Color::getColorFromRGB(21, 142, 181));
    add(seperatorLine);

    menuIcon0.setXY(123, 73);
    menuIcon0.setBitmap(touchgfx::Bitmap(BITMAP_SUBDEMOICON_INFO_ID));
    menuIcon0.setAlpha(0);
    add(menuIcon0);

    menuLeftArrow.setXY(0, 80);
    menuLeftArrow.setBitmaps(touchgfx::Bitmap(BITMAP_LEFTARROW_ID), touchgfx::Bitmap(BITMAP_LEFTARROWDARK_ID));
    menuLeftArrow.setAlpha(0);
    menuLeftArrow.setAction(buttonCallback);
    add(menuLeftArrow);

    menuRightArrow.setXY(270, 80);
    menuRightArrow.setBitmaps(touchgfx::Bitmap(BITMAP_RIGHTARROW_ID), touchgfx::Bitmap(BITMAP_RIGHTARROWDARK_ID));
    menuRightArrow.setAlpha(0);
    menuRightArrow.setAction(buttonCallback);
    add(menuRightArrow);

    menuHiddenButton.setXY(123, 57);
    menuHiddenButton.setBitmaps(touchgfx::Bitmap(BITMAP_MENUHIDDENBUTTON_ID), touchgfx::Bitmap(BITMAP_MENUHIDDENBUTTON_ID));
    menuHiddenButton.setAction(buttonCallback);
    add(menuHiddenButton);

    headline.setPosition(0, 4, 320, 38);
    headline.setColor(touchgfx::Color::getColorFromRGB(20, 22, 23));
    headline.setLinespacing(0);
    headline.setTypedText(touchgfx::TypedText(T_INFORMATIONMENUITEM));
    headline.setAlpha(0);
    add(headline);

    headlineSeperatorLine.setPosition(0, 38, 320, 2);
    headlineSeperatorLine.setColor(touchgfx::Color::getColorFromRGB(21, 142, 181));
    headlineSeperatorLine.setAlpha(0);
    add(headlineSeperatorLine);

    subtitle.setXY(60, 147);
    subtitle.setBitmap(touchgfx::Bitmap(BITMAP_TOCUHGFXDEMO5_ID));
    subtitle.setAlpha(0);
    add(subtitle);
}

Screen1ViewBase::~Screen1ViewBase()
{

}

void Screen1ViewBase::setupScreen()
{

}

void Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &menuRightArrow)
    {
        //MoveMenuItemToRight
        //When menuRightArrow clicked call virtual function
        //Call menuRightButtonClicked
        menuRightButtonClicked();
    }
    if (&src == &menuLeftArrow)
    {
        //MoveMenuItemToLeft
        //When menuLeftArrow clicked call virtual function
        //Call menuLeftButtonClicked
        menuLeftButtonClicked();
    }
    if (&src == &menuHiddenButton)
    {
        //MenuItemIsSelected
        //When menuHiddenButton clicked call virtual function
        //Call menuHiddenButtonClicked
        menuHiddenButtonClicked();
    }
}

void Screen1ViewBase::goToInfoScreen()
{
    //SwitchScreenToInfoScreen
    //When goToInfoScreen is called change screen to Info
    //Go to Info with no screen transition
    application().gotoInfoScreenNoTransition();
}

void Screen1ViewBase::goToImageScreen()
{
    //SwitchScreenToImageScreen
    //When goToImageScreen is called change screen to Image
    //Go to Image with no screen transition
    application().gotoImageScreenNoTransition();
}

void Screen1ViewBase::goToListScreen()
{
    //SwitchScreenToListScreen
    //When goToListScreen is called change screen to List
    //Go to List with no screen transition
    application().gotoListScreenNoTransition();
}

void Screen1ViewBase::goToGraphScreen()
{
    //SwitchScreenToGraphScreen
    //When goToGraphScreen is called change screen to Graph
    //Go to Graph with screen transition towards East
    application().gotoGraphScreenWipeTransitionEast();
}
